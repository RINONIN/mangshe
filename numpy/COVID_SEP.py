"""
作者：RINO
日期: 2021年12月20日
时间: 13:52
"""
from matplotlib import pyplot as plt
import numpy as np

covid = {"data": [], "date": [], "header": "Confirmed,Deaths,Recovered,Active,New cases,New deaths,New recovered,"
                                           "Deaths / 100 Cases,Recovered / 100 Cases,Deaths / 100 Recovered,"
                                           "No. of countries".split(",")}
_data = """
2020-01-22,1,0,0,0,2,1,3,1,0,0,1
2020-01-23,2,0,0,0,2,1,3,2,0,0,2
2020-01-24,3,0,0,0,2,1,3,1,0,0,3
2020-01-25,4,0,0,0,2,1,3,2,0,0,4
2020-01-26,5,0,0,0,2,1,3,2,0,0,5
2020-01-27,6,0,0,1,2,1,3,2,0,0,6
2020-01-28,7,0,0,1,2,1,3,2,1,1,7
2020-01-29,8,0,0,1,2,1,3,2,2,1,8
2020-01-30,9,0,1,1,2,1,3,2,3,1,9
2020-01-31,10,0,0,1,2,1,3,2,4,1,10
2020-02-01,11,1,0,1,2,1,3,2,5,1,11
2020-02-02,12,2,0,1,2,1,3,2,6,1,12
2020-02-03,13,3,0,1,2,1,3,2,7,1,13
2020-02-04,14,4,0,1,2,1,3,2,8,1,14
2020-02-05,15,5,0,1,2,1,3,2,9,1,15
2020-02-06,16,6,1,1,2,1,3,2,10,1,16
2020-02-07,17,7,0,1,2,1,3,2,11,1,17
2020-02-08,18,8,0,1,2,1,3,2,12,1,18
2020-02-09,19,9,0,1,2,1,3,2,13,1,19
2020-02-10,20,10,1,1,2,1,3,2,14,1,20
2020-02-11,21,11,0,1,2,1,3,2,15,1,21
2020-02-12,22,12,10,1,2,1,3,2,16,1,22
2020-02-13,23,13,0,1,2,1,3,2,17,1,23
2020-02-14,24,14,1,1,2,1,3,2,18,1,24
2020-02-15,25,15,1,1,2,1,3,2,19,1,25
2020-02-16,26,16,1,1,2,1,3,2,20,1,26
2020-02-17,27,17,12,1,2,1,3,2,21,1,27
2020-02-18,28,18,1,1,2,1,3,2,22,1,28
2020-02-19,29,19,2,1,2,1,3,2,23,1,29
2020-02-20,30,20,3,1,2,1,3,2,24,1,30
2020-02-21,31,21,4,1,2,1,3,2,25,1,31
2020-02-22,32,22,5,1,2,1,3,2,26,1,32
2020-02-23,33,23,6,1,2,1,3,2,27,1,33
2020-02-24,34,24,7,1,2,1,3,2,28,1,34
2020-02-25,35,25,8,1,2,1,3,2,29,1,35
2020-02-26,36,26,9,1,2,1,3,2,30,1,36
2020-02-27,37,27,10,1,2,1,3,2,31,1,37
2020-02-28,38,28,11,1,2,1,3,2,32,1,38
2020-02-29,39,29,12,1,2,1,3,2,33,1,39
2020-03-01,40,30,13,1,2,1,3,2,34,1,40
2020-03-02,41,31,14,1,2,1,3,2,35,1,41
2020-03-03,42,32,15,1,2,1,3,2,36,1,42
2020-03-04,43,33,16,1,2,1,3,2,37,1,43
2020-03-05,44,34,17,1,2,1,3,2,38,1,44
2020-03-06,45,35,18,1,2,1,3,2,39,1,45
2020-03-07,46,36,19,1,2,1,3,2,40,1,46
2020-03-08,47,37,20,1,2,1,3,2,41,1,47
2020-03-09,48,38,21,1,2,1,3,2,42,1,48
2020-03-10,49,39,22,1,2,1,3,2,43,1,49
2020-03-11,50,40,23,1,2,1,3,2,44,1,50
2020-03-12,51,41,24,1,2,1,3,2,45,1,51
2020-03-13,52,42,25,1,2,1,3,2,46,1,52
2020-03-14,53,43,26,1,2,1,3,2,47,1,53
2020-03-15,54,44,27,1,2,1,3,2,48,1,54
2020-03-16,55,45,28,1,2,1,3,2,49,1,55
2020-03-17,56,46,29,1,2,1,3,2,50,1,56
2020-03-18,57,47,30,1,2,1,3,2,51,1,57
2020-03-19,58,48,31,1,2,1,3,2,52,1,58
2020-03-20,59,49,32,1,2,1,3,2,53,1,59
2020-03-21,60,50,33,1,2,1,3,2,54,1,60
2020-03-22,61,51,34,1,2,1,3,2,55,1,61
2020-03-23,62,52,35,1,2,1,3,2,56,1,62
2020-03-24,63,53,36,1,2,1,3,2,57,1,63
2020-03-25,64,54,37,1,2,1,3,2,58,1,64
2020-03-26,65,55,38,1,2,1,3,2,59,1,65
2020-03-27,66,56,39,1,2,1,3,2,60,1,66
2020-03-28,67,57,40,1,2,1,3,2,61,1,67
2020-03-29,68,58,41,1,2,1,3,2,62,1,68
2020-03-30,69,59,42,1,2,1,3,2,63,1,69
2020-03-31,70,60,43,1,2,1,3,2,64,1,70
2020-04-01,71,61,44,1,2,1,3,2,65,1,71
2020-04-02,72,62,45,1,2,1,3,2,66,1,72
2020-04-03,73,63,46,1,2,1,3,2,67,1,73
2020-04-04,74,64,47,1,2,1,3,2,68,1,74
2020-04-05,75,65,48,1,2,1,3,2,69,1,75
2020-04-06,76,66,49,1,2,1,3,2,70,1,76
2020-04-07,77,67,50,1,2,1,3,2,71,1,77
2020-04-08,78,68,51,1,2,1,3,2,72,1,78
2020-04-09,79,69,52,1,2,1,3,2,73,1,79
2020-04-10,80,70,53,1,2,1,3,2,74,1,80
2020-04-11,81,71,54,1,2,1,3,2,75,1,81
2020-04-12,82,72,55,1,2,1,3,2,76,1,82
2020-04-13,83,73,56,1,2,1,3,2,77,1,83
2020-04-14,84,74,57,1,2,1,3,2,78,1,84
2020-04-15,85,75,58,1,2,1,3,2,79,1,85
2020-04-16,86,76,59,1,2,1,3,2,80,1,86
2020-04-17,87,77,60,1,2,1,3,2,81,1,87
2020-04-18,88,78,61,1,2,1,3,2,82,1,88
2020-04-19,89,79,62,1,2,1,3,2,83,1,89
2020-04-20,90,80,63,1,2,1,3,2,84,1,90
2020-04-21,91,81,64,1,2,1,3,2,85,1,91
2020-04-22,92,82,65,1,2,1,3,2,86,1,92
2020-04-23,93,83,66,1,2,1,3,2,87,1,93
2020-04-24,94,84,67,1,2,1,3,2,88,1,94
2020-04-25,95,85,68,1,2,1,3,2,89,1,95
2020-04-26,96,86,69,1,2,1,3,2,90,1,96
2020-04-27,97,87,70,1,2,1,3,2,91,1,97
2020-04-28,98,88,71,1,2,1,3,2,92,1,98
2020-04-29,99,89,72,1,2,1,3,2,93,1,99
2020-04-30,100,90,73,1,2,1,3,2,94,1,10045,6.91,187
"""
for line in _data.split("\n"):
    row = line.strip().split(",")
    if len(row) <= 1:
        continue
    covid["date"].append(row[0])
    covid["data"].append([float(i) for i in row[1:]])

data = np.array(covid["data"], dtype=object)
print(type(data))

print('数据标题：', covid["header"])
print('前两行数据:', covid["data"][:2])
print("一共数据行数（记录天数）：", len(covid["data"]))
print("记录开始日期：", covid["date"][0], ";记录结束日期：", covid["date"][-1])

print("日期列表摘取：", covid["date"][:4])

date_idx = covid["date"].index("2020-02-03")
print("日期->索引转换：", date_idx)

for header, number in zip(covid["header"], data[date_idx]):
    print(header, ":", number)

row_idx = covid["date"].index("2020-01-24")  # 获取日期索引
column_idx = covid["header"].index("Confirmed")  # 获取标题的索引
confirmed0124 = data[row_idx][column_idx]
print("截止 1 月 24 日的累积确诊数：", confirmed0124)

row_idx = covid["date"].index("2020-04-30")  # 获取日期索引
column_idx = covid["header"].index("New deaths")  # 获取标题的索引
result = data[row_idx][column_idx]
print("截止 4月 30 日的新增死亡数：", result)

row1_idx = covid["date"].index("2020-01-25")
row2_idx = covid["date"].index("2020-04-29")
new_cases_idx = covid["header"].index("New cases")

# 注意要 row1_idx+1 得到从 01-25 这一天的新增
# row2_idx+1 来包含 4 月 29 的结果

# new_cases = data[row1_idx + 1:row2_idx + 1, new_cases_idx]
new_cases = np.zeros(shape=(100, 2))
new_cases = data[row1_idx + 1:row2_idx + 1, new_cases_idx]
overall = new_cases.sum()
print("共新增：", overall)

confirm_idx = covid["header"].index("Confirmed")
confirmed = data[:, confirm_idx]
overall2 = confirmed[row2_idx] - confirmed[row1_idx]
print("共新增：", overall2)

confirmed = data[:, confirm_idx]
new_cases = data[:, new_cases_idx]

for i in range(row1_idx, row2_idx + 1):
    diff = new_cases[i] - (confirmed[i] - confirmed[i - 1])
    if diff != 0:
        print("date index:", i, ";差异：", diff)

new_cases_idx = covid["header"].index("New cases")
new_recovered_idx = covid["header"].index("New recovered")

# 比例
ratio = data[:, new_cases_idx] / data[:, new_recovered_idx]
print("比例样本：", ratio[:5])

print(data[0, new_cases_idx])
print(data[0, new_recovered_idx])

not_zero_mask = data[:, new_recovered_idx] != 0
ratio = data[not_zero_mask, new_cases_idx] / data[not_zero_mask, new_recovered_idx]

# 平均比例, 标准差
ratio_mean = ratio.mean()
ratio_std = ratio.std()
print("平均比例：", ratio_mean, "；标准差：", ratio_std)


def draw_line(x):
    plt.plot(x)
    plt.show()


new_cases_idx = covid["header"].index("New cases")
draw_line(data[:, new_cases_idx])

print(covid["date"][50])

death_ratio_idx = covid["header"].index("Deaths / 100 Cases")
draw_line(data[:, death_ratio_idx])
